---
# This playbook installs MySQL to be used as a database for OIM
# Part of a series of playbooks to install pre-requisites for OpsHub Integration Manager (OIM) on a server
#
# Pre-requisites:

- name: "Add the MySQL repo to Yum"
  yum:
    name=https://dev.mysql.com/get/mysql80-community-release-el7-1.noarch.rpm
    state=present

- name: "Install MySQL 5.7 packages (instead of the latest 8.0)"
# mysql-community-server is the db server, mysql-community-client is the mysql command line program, MySQL-python is needed by the ansible mysql_user task
  yum:
    name: mysql-community-server,mysql-community-client,MySQL-python
    state: present
    # OIM does not support MySQL v8 yet
    disablerepo: mysql80-community
    # it does support v5.7.x
    enablerepo: mysql57-community

- name: "Start MySQL service"
  systemd:
    name: mysqld
    state: started
    enabled: yes

# This is debugging to make sure that MySQL 5.7 was installed
# This can be removed if it is working as expected on a clean install
- name: "List the version of the MySQL package installed"
  yum: list=installed
  register: yum_packages
- debug: var=item
  with_items: "{{yum_packages|json_query(jsonquery)}}"
  vars:
    jsonquery: "results[?name=='mysql-community-server'].version"

# Get the temporary root password from the mysqld.log file. The mysql install generates a temp root password and writes it to that log file.
- name: Get the temporary root password
  shell: "echo `grep 'temporary.*root@localhost' /var/log/mysqld.log | tail -1 | sed 's/.*root@localhost: //'`"
  register: mysql_initial_root_password

# Create a .my.cnf file for root so that the remaining ansible mysql tasks use the username/password in it to connect to the database
- name: create .my.cnf file for root login into mysql
  template:
    src: "my.cnf.j2"
    dest: "/root/.my.cnf"
    owner: root
    group: root
    mode: 0600
    force: no

- name: Disallow root remote login
  command: 'mysql -NBe "{{ item }}"'
  with_items:
    - DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1')
  changed_when: false

- name: Removes the test database
  mysql_db: db=test state=absent

- name: Deletes anonymous server user
  mysql_user: user="" host_all=yes state=absent

- name: "Create MySQL userid for the app to use"
  mysql_user:
    name: oim_mysql
    password: "{{ mysql.oim_mysql_password }}"
    priv: "*.*:ALL"
    host: localhost
    state: present

- name: "Install the JDBC driver"
  yum:
    name: mysql-connector-java
    state: present

- name: "Make a symlink to the JDBC driver that the OIM installer (stupidly) expects"
  file:
    src: /usr/share/java/mysql-connector-java.jar
    dest: /usr/share/java/mysql-connector-java-5.0.8-bin.jar
    state: link

# Set the root password to what we want it to be.
# We can't use the mysql_user ansible module because this temporary root password is considered an expired password and the ansible module does not support logging in with expired passwords. Thus we need to use a shell command with the mysql command to change the password.
#- name: Set the root password to our configured value 
#  shell: 'mysql -e "SET PASSWORD = PASSWORD(''{{ mysql.root_password }}'');" --connect-expired-password -uroot -p{{ mysql_root_password_temp.stdout }}'
#

